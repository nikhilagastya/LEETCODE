# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
       if head is None:
        return None 
       l1=[]
       while head is not None:
          l1.append(int(head.val))
          head=head.next
       print(l1)
       l1.pop(len(l1)-n)
       print(l1)
       if len(l1)==0:
            return None
       l2=l3=ListNode(int(l1[0]))
       for i in range(1,len(l1)):
        l2.next=ListNode(int(l1[i]))
        l2=l2.next
       return l3
    
