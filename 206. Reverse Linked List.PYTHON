# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
  def reverseList(self, head: ListNode) -> ListNode:
        prev = None
        cur = head
        while cur:
            temp = cur.next
            cur.next = prev
            cur, prev = temp, cur
        return prev
        ***************************************************or****************************************************
        # Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
  def reverseList(self, head: ListNode) -> ListNode:
        if head is None:
            return None
        l1=[]
        while head is not None:
            l1.append(int(head.val))
            head=head.next
        l1.reverse()
        l2=l3=ListNode(int(l1[0]))
        for i in range(1,len(l1)):
            l2.next=ListNode(int(l1[i]))
            l2=l2.next
        return l3
        
